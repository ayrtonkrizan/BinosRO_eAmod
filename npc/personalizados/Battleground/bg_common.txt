// (c) 2008 - 2012 eAmod Project; Andres Garbanzo / Zephyrus
//
//  - gaiaro.staff@yahoo.com
//  - MSN andresjgm.cr@hotmail.com
//  - Skype: Zephyrus_cr
//  - Site: http://dev.terra-gaming.com
//
// This file is NOT public - you are not allowed to distribute it.
// Authorized Server List : http://dev.terra-gaming.com/index.php?/topic/72-authorized-eamod-servers/
// eAmod is a non Free, extended version of eAthena Ragnarok Private Server.

// ==============================================================================
// BattleGround System - Common NPCs
// ==============================================================================

// MapFlags
// *********************************************************************

bat_room	mapflag	nomemo
bat_room	mapflag	nowarpto
bat_room	mapflag	nobranch
bat_room	mapflag	nopenalty
bat_room	mapflag	noteleport
bat_room	mapflag	nosave	SavePoint
bat_room	mapflag	allow_bg_items
// Mapflag Town is required to Join BG Queues
bat_room	mapflag	town

// Battleground Queue Admin
// *********************************************************************
-	script	BG_Queue_Join	-1,{
	end;

OnInit:
	// Configuration
	// *****************************************************
	// Battleground Rotation - Main NPC name
	setarray .BG_Arenas$[0],	     "Flavius_TD",   "Conquest",   "Rush";
	// Battleground Arena Name - for announcements
	setarray .BG_Names$[0],		"Jogo da Morte",    "Conquista",    "Rush";
	// Minimum Players to start the BG
	setarray .BG_Min[0],	                         1,             1,             1;
	// Maximum Players per Team
	setarray .BG_Max[0],	                        50,            100,             100;
	// BG Message Colors
	setarray .BG_Color$[0],	                "0x9ACD32",    "0x9ACD32",       "0x9ACD32";
	// Team Building Mode : 0 = Lineal | 1 = Random | 2 = Class Priority | 3 = Faction Mode | 4 = Team Color ( by script set Bat_Team,N; )
	set .TeamMode, 0;
	// Main Code
	// *****************************************************
	set .BG_Count, getarraysize(.BG_Arenas$);
	set .BG_Queue, bg_queue_create("Battleground Arena","BG_Queue_Join::OnJoinEvent",80);
	set .VS_Queue, bg_queue_create("Free For All Arena","BG_Queue_Join::OnVersusJoin",80);
	// Move to Next Arena
	if( $BG_Index >= .BG_Count ) set $BG_Index,0; // Restart Rotation
	set .BG_Arena$,.BG_Arenas$[$BG_Index];
	set .Ready, 1;
	donpcevent "BG_Queue_Join::OnDoHappyHour";
	initnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method

	// Comment the next two lines if you don't want to allow @joinbg and @leavebg commands.
	bindatcmd "joinbg","BG_Queue_Join::OnDoJoin",0,99;
	bindatcmd "leavebg","BG_Queue_Join::OnDoLeave",0,99;
	end;

OnDoJoin: // @joinbg
	if( checkquest(8506,PLAYTIME) == 2 )
		erasequest 8506;

	if( checkquest(8506,PLAYTIME) != -1 )
	{
		dispbottom "[Você é um desertor. Espere um pouco de tempo para participar novamente]";
		end;
	}

	bg_queue_join .BG_Queue;
	end;

OnDoLeave: // @leavebg
	bg_queue_leave .BG_Queue;
	end;

OnRotate:
OnTimer300000: // Rotation if BG don't start... Comment if you don't want to use this method. 120 = 2 Minutes
	set $@BG_Status, 0;
	// Warps Teams
	bg_warp $@BG_Team1,"bat_room",153,150;
	bg_warp $@BG_Team2,"bat_room",153,150;
	bg_warp $@BG_Team3,"bat_room",153,150;
	// Destroy Teams
	bg_destroy $@BG_Team1; set $@BG_Team1, 0;
	bg_destroy $@BG_Team2; set $@BG_Team2, 0;
	bg_destroy $@BG_Team3; set $@BG_Team3, 0;

	// Move to Next Arena
	if( set($BG_Index,$BG_Index + 1) >= .BG_Count )
		set $BG_Index,0; // Restart Rotation

	set .BG_Arena$,.BG_Arenas$[$BG_Index];
	initnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method

	// Trigger the Event - Maybe people is waiting...
OnJoinEvent:
	if( $@BG_Status == 2 )
		end; // BG Ending... Must wait until OnRotate is called

	set .@Queue_Count, bg_queue_data(.BG_Queue,0);
	switch( $@BG_Status )
	{
	case 0: // Idle - Ready to Start
		if( .BG_Arena$ == "Tierra_TI" )
			set .@Req, .BG_Min[$BG_Index] * 3;
		else
			set .@Req, .BG_Min[$BG_Index] * 2;

		if( bg_queue_checkstart(.BG_Queue,.TeamMode,( (.BG_Arena$ == "Tierra_TI") ? 3 : 2 ),.BG_Min[$BG_Index]) )
		{
			donpcevent .BG_Arena$ + "::OnBuildTeams";

			// Fill Teams with Queue Members			
			if( .BG_Arenas$[$BG_Index] == "Tierra_TI" )
				bg_queue2teams .BG_Queue,.BG_Min[$BG_Index],.BG_Max[$BG_Index],.TeamMode,$@BG_Team1,$@BG_Team2,$@BG_Team3;
			else
				bg_queue2teams .BG_Queue,.BG_Min[$BG_Index],.BG_Max[$BG_Index],.TeamMode,$@BG_Team1,$@BG_Team2;

			stopnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method

			set $@BG_Status,1;
			set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- Começou !";
			bgannounce .@msg$,.BG_Color$[$BG_Index];

			donpcevent .BG_Arena$ + "::OnReady";
		}
		else
		{
			set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- " + (.@Req - .@Queue_Count) + " Jogador(es) para começar -- Digite @joinbg e participe !!";
			announce .@msg$,0,.BG_Color$[$BG_Index];
		}
		break;
	case 1: // Running - Others can join
		if( .@Queue_Count > 0 )
		{
			if( .BG_Arena$ == "Tierra_TI" )
			{
				bg_balance_teams .BG_Queue,.BG_Max[$BG_Index],.TeamMode,$@BG_Team1,$@BG_Team2,$@BG_Team3;
				set .@BG_Count1, bg_get_data($@BG_Team1,0);
				set .@BG_Count2, bg_get_data($@BG_Team2,0);
				set .@BG_Count3, bg_get_data($@BG_Team3,0);
				set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- B: " + .@BG_Count1 + "/" + .BG_Max[$BG_Index] + ", R: " + .@BG_Count2 + "/" + .BG_Max[$BG_Index] + ", G: " + .@BG_Count3 + "/" + .BG_Max[$BG_Index] + " (Playing)";
			}
			else
			{
				bg_balance_teams .BG_Queue,.BG_Max[$BG_Index],.TeamMode,$@BG_Team1,$@BG_Team2;
				set .@BG_Count1, bg_get_data($@BG_Team1,0);
				set .@BG_Count2, bg_get_data($@BG_Team2,0);
				set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- B: " + .@BG_Count1 + "/" + .BG_Max[$BG_Index] + ", R: " + .@BG_Count2 + "/" + .BG_Max[$BG_Index] + " (Playing)";
			}

			bgannounce .@msg$,.BG_Color$[$BG_Index];
		}
		break;
	}
	end;

OnVersusJoin:
	if( $@VS_Status != 0 )
		end;

	set .@Queue_Count, bg_queue_data(.VS_Queue,0);
	if( .@Queue_Count >= 10 )
	{
		donpcevent "FFA_Arena::OnBuildTeams";
		bg_queue2teams .VS_Queue,1,1,0,$@VS_Team[0],$@VS_Team[1],$@VS_Team[2],$@VS_Team[3],$@VS_Team[4],$@VS_Team[5],$@VS_Team[6],$@VS_Team[7],$@VS_Team[8],$@VS_Team[9];
		set $@VS_Status,1;
		announce "Battleground -- Free For All -- Begining",0,0x483D8B;
		donpcevent "FFA_Arena::OnReady";
	}
	else
		announce "Battleground -- Livre para Todos -- " + (10 - .@Queue_Count) + " Jogador(es) para começar ",0,0x9ACD32;
	end;

OnFri0600: // Friday, 6 a.m.
	rankreset 1; // Ranking Reset
	end;

// BattleGround Happy Hour
OnDoHappyHour:
OnClock1600:
OnClock1800:
OnClock2000:
OnClock2200:
	switch( gettime(4) )
	{
	case 1:
	case 3:
	case 5:
		if( gettime(3) >= 20 && gettime(3) < 22 )
		{
			announce "-- Battleground Happy Hour começou | Ranked Arena Mode --",0,0x00FF00;
			setbattleflag "bg_reward_rates",120; // +20% Reward Rates
			setbattleflag "bg_ranked_mode",1;
			end;
		}
		
		if( gettime(3) == 22 )
		{
			announce "-- Battleground Happy Hour acabou | Regular Arena Mode --",0,0x00BFFF;
			setbattleflag "bg_reward_rates",100; // Normal Rates
			setbattleflag "bg_ranked_mode",0;
			end;
		}
		break;
	case 2:
	case 4:
	case 6:
		if( gettime(3) >= 16 && gettime(3) < 18 )
		{
			announce "-- Battleground Happy Hour começou | Ranked Arena Mode --",0,0x00FF00;
			setbattleflag "bg_reward_rates",120; // +20% Reward Rates
			setbattleflag "bg_ranked_mode",1;
			end;
		}
		
		if( gettime(3) == 18 )
		{
			announce "-- Battleground Happy Hour acabou | Regular Arena Mode --",0,0x00BFFF;
			setbattleflag "bg_reward_rates",100; // Normal Rates
			setbattleflag "bg_ranked_mode",0;
			end;
		}
		break;
	}
	end;
}

// Registration NPC
// *********************************************************************
-	script	BG_Register	-1,{

	if( getvariableofnpc(.Ready,"BG_Queue_Join") == 0 )
		donpcevent "BG_Queue_Join::OnInit";

	mes "[^FFA500Registro Campal^000000]";
	mes (gettime(3)>= 6&&gettime(3)<= 12?"Bom-dia":(gettime(3)>=13&&gettime(3)<=18?"Boa-tarde":"Boa-noite"))+", ^008aff"+strcharinfo(0)+"^000000 !";
	mes "Este é o serviço de informação de Batalha e Registro.";
	mes "O que você quer fazer?";
	next;
	switch( select("^0084ff[ • ]^000000 Arenas de Batalhas Campais:^0084ff[ • ]^000000 Arena Livre para Todos:^0084ff[ • ]^000000 Ir para a sala de Batalha") )
	{
	case 1:
		mes "[^FFA500Registro Campal^000000]";
		mes "As Arenas de Batalhas Campais são diferentes tipos de jogos onde as equipes lutam pela vitória.";
		mes "O que você quer fazer?";
		next;
		switch( select("^0084ff[ • ]^000000 Registrar:^0084ff[ • ]^000000 Registrar Grupo:^ff0000[ • ]^000000 Sair da fila") )
		{
		case 1:
			if( BaseLevel < 80 )
			{
				mes "[^FFA500Registro Campal^000000]";
				mes "O nível mínimo para participar de uma campo de batalha é 80.";
				close;
			}
			if( checkquest(8506,PLAYTIME) == 2 )
				erasequest 8506;
			if( checkquest(8506,PLAYTIME) != -1 )
			{
				mes "[^FFA500Registro Campal^000000]";
				mes "Você desistiu da Batalha, não pode entrar agora.";
				close;
			}

			mes "[^FFA500Registro Campal^000000]";
			mes "REGISTRADO!";
			mes "Você deve esperar em qualquer cidade até que inicie a batalha.";
			mes "Feche esta janela para continuar...";
			close2;
			bg_queue_join getvariableofnpc(.BG_Queue,"BG_Queue_Join");
			end;
		case 2:
			if( getcharid(1) == 0 )
			{
				mes "[^FFA500Registro Campal^000000]";
				mes "Você não está em um Grupo.";
				close;
			}

			mes "[^FFA500Registro Campal^000000]";
			mes "REGISTRADO!.";
			mes "Você deve esperar em qualquer cidade até que inicie a batalha.";
			mes "Feche esta janela para continuar...";
			close2;
			bg_queue_partyjoin getcharid(1),getvariableofnpc(.BG_Queue,"BG_Queue_Join");
			end;
		case 3:
			mes "[^FFA500Registro Campal^000000]";
			mes "Se você estiver registrado, você vai ser removido.";
			mes "Você tem certeza?";
			next;
			if( select("Sim!:Não!") == 2 )
			{
				mes "[^FFA500Registro Campal^000000]";
				mes "Ok, nada de mudar.";
				close;
			}

			mes "[^FFA500Registro Campal^000000]";
			mes "Feche esta janela para continuar...";
			close2;
			bg_queue_leave getvariableofnpc(.BG_Queue,"BG_Queue_Join");
			end;
		break;
		}
		close;
	case 2:
		mes "[^FFA500Registro Campal^000000]";
		mes "Arena Livre para Todos é um duelo entre 10 jogadores sem nenhuma equipe.";
		mes "A meta é matar 25 jogadores.";
		mes "O que você quer fazer?";
		next;
		switch( select("^0084ff[ • ]^000000 Registrar:^ff0000[ • ]^000000 Sair da Fila") )
		{
		case 1:
			if( BaseLevel < 80 )
			{
				mes "[^FFA500Registro Campal^000000]";
				mes "O nível mínimo para participar de uma campo de batalha é 80.";
				close;
			}
			if( checkquest(8506,PLAYTIME) == 2 )
				erasequest 8506;
			if( checkquest(8506,PLAYTIME) != -1 )
			{
				mes "[^FFA500Registro Campal^000000]";
				mes "Você desistiu da Batalha, não pode entrar agora";
				close;
			}

			mes "[^FFA500Registro Campal^000000]";
			mes "REGISTRADO!";
			mes "Você deve esperar em qualquer cidade até que inicie a batalha.";
			mes "Feche esta janela para continuar...";
			close2;
			bg_queue_join getvariableofnpc(.VS_Queue,"BG_Queue_Join");
			end;
		case 2:
			mes "[^FFA500Registro Campal^000000]";
			mes "Se você estiver registrado, você vai ser removido.";
			mes "Você tem certeza?";
			next;
			if( select("^0084ff[ • ]^000000 Sim!:^ff0000[ • ]^000000 Não!") == 2 )
			{
				mes "[^FFA500Registro Campal^000000]";
				mes "Ok, nada de mudar.";
				close;
			}

			mes "[^FFA500Registro Campal^000000]";
			mes "Feche esta janela para continuar ...";
			close2;
			bg_queue_leave getvariableofnpc(.VS_Queue,"BG_Queue_Join");
			end;
		}
		break;
	case 3:
		mes "[^FFA500Registro Campal^000000]";
		mes "Que o Deus da Guerra o abençõe.";
		close2;
		warp "bat_room",154,150;
		end;
	}
	OnInit:
	waitingroom "[  Batalha Campal  ]",0;
	end;
}


// General Guillaume
// *********************************************************************
-	script	General Guillaume	-1,{
	cutin "bat_kiyom2",2;
	mes "[General Guillaume]";
	mes "Hot-blooded adventurer, we need your ability to win this battle.";
	next;
	cutin "bat_kiyom1",2;
	mes "[General Guillaume]";
	mes "Our great king, Marcel Marollo VII, is very sick lately. His Majesty has declared that he chosen either me or Prince Croix as the next king amongst his 9 sons.";
	next;
	mes "[General Guillaume]";
	mes "Two kings can't share a nation!";
	mes "Only the one victorious from His Majesty's appointed battle will be enthroned.";
	next;
	mes "[General Guillaume]";
	mes "This is however, not just a battle between us. This battle will determine the future of this country. I pledge on my honor to prove that I'm the one who can protect this Maroll from outside threats.";
	next;
	switch( select("Join the Blue Team","Join the Green Team","End Conversation") )
	{
	case 1:
		cutin "bat_kiyom2",2;
		mes "[General Guillaume]";
		mes "Welcome to my army, comrade.";
		mes "Your eyes tell me that you're a soldier that I can trust.";
		set Bat_Team,1;
		next;
		mes "[General Guillaume]";
		mes "Now, go upstairs and apply for battle with your comrades. I'm sure they'll welcome you whole-heartedly!";
		break;
	case 2:
		cutin "bat_kiyom2",2;
		mes "[General Guillaume]";
		mes "So you will take this fight as your own...";
		mes "Then you are my enemy.";
		set Bat_Team,0;
		next;
		mes "[General Guillaume]";
		mes "Go now, We will meet again in the Battlefield.";
		break;
	case 3:
		mes "[General Guillaume]";
		mes "I'll be the one who will capture the flag!";
		break;
	}

	close2;
	cutin "",255;
	end;
}

// General Croix
// *********************************************************************
-	script	Prince Croix	-1,{
	cutin "bat_crua1",2;
	mes "[Prince Croix]";
	mes "Wise adventurer, why don't you lend us your power for victory?";
	next;
	cutin "bat_crua2",2;
	mes "[Prince Croix]";
	mes "I do not wish to shed blood, but I have no choice but to fight for the possibility of peace and for the sake of my people.";
	next;
	mes "[Prince Croix]";
	mes "General Guillaume may have an advantage in this battle as he is the great general of Maroll, but that doesn't automatically mean he'll win. I want to win this battle so that I can grant a better future for my people.";
	next;
	
	switch( select("Join the Red Team","Join the Green Team","End Conversation") )
	{
	case 1:
		mes "[Prince Croix]";
		mes "Thank you so much. I feel like I can win with the help of adventurers like you. Now, please go downstairs and join your comrades in sharpening their skills to fight the enemy!";
		set Bat_Team,2;
		break;
	case 2:
		mes "[Prince Croix]";
		mes "So you will take this fight as your own...";
		mes "Then you are my enemy.";
		set Bat_Team,0;
		next;
		mes "[Prince Croix]";
		mes "Go now, We will meet again in the Battlefield.";
		break;
	case 3:
		mes "[Prince Croix]";
		mes "For Maroll!";
		break;
	}	
	
	close2;
	cutin "",255;
	end;
}

// Guard Dummy
// *********************************************************************

-	script	Prince Croix's Aid::bat_aid	415,{ end; }


// Flags
// *********************************************************************

-	script	Base Flag#bg	-1,{ end; }

// BattleGround Warper - Exit
// *********************************************************************

bat_room,148,150,5	script	Saida#bat	124,{
	mes "^FF1493[ Teleportadora ]^000000";
	mes "Você gostaria de deixar o campo de batalha?";
	next;
	if( select("^0084ff[ • ]^000000 Sim, quero sair.:^ff0000[ • ]^000000 Não, vou ficar mais um pouco.") == 2 )
	{
		mes "^FF1493[ Teleportadora ]^000000";
		mes "Eu vou estar aqui sempre que você estiver na necessidade do meu serviço.";
		close;
	}

	switch( @ArenaPVP_out )
	{
		// Rune Midgard Republic
		case 1: warp "prontera",149,92; break;
		case 2: warp "payon",165,98; break;
		case 3: warp "morocc",153,94; break;
		case 4: warp "umbala",121,143; break;
		case 5: warp "comodo",196,140; break;
		case 6: warp "niflheim",214,193; break;
		case 7: warp "aldebaran",143,111; break;
		case 8: warp "geffen",107,53; break;
		// Schwarzard Republic
		case 9: warp "yuno",151,177; break;
		case 10: warp "hugel",99,143; break;
		case 11: warp "lighthalzen",167,93; break;
		case 12: warp "einbroch",70,194; break;
		case 13: warp "einbech",168,130; break;
		// Arunafelz Republic
		case 14: warp "rachel",118,114; break;
		case 15: warp "veins",207,122; break;
		// Islands
		case 16: warp "nameless_n",161,179; break;
		case 17: warp "louyang",213,106; break;
		case 18: warp "gonryun",154,111; break;
		case 19: warp "ayothaya",148,109; break;
		case 20: warp "moscovia",229,195; break;
		case 21: warp "xmas",151,127; break;
		case 22: warp "amatsu",203,107; break;
		case 23: warp "izlude",126,114; break;
		case 24: warp "brasilis",195,211; break;
		case 25: warp "manuk",279,214; break;
		case 26: warp "splendide",200,174; break;
		// Anyplace else
		default:
			set .@spoint$, getsavepoint(0);
			set .@x, getsavepoint(1);
			set .@y, getsavepoint(2);
			mes "^FF1493[ Teleportadora ]^000000";
			mes "You will be sent back to " + .@spoint$ + ".";
			close2;
			warp .@spoint$, .@x, .@y;
			break;
	}
	
	set @ArenaPVP_out, 0;
	end;
}

// Kafra
// *********************************************************************
bat_room,148,147,4	script	Kafra Staff::kaf_bat	861,{
	cutin "kafra_09",2;
	callfunc "F_Kafra",0,2,1,150,0;
}

bat_room,159,150,2	duplicate(BG_Register)	Registro Campal#bat	469
prontera,147,173,4	duplicate(BG_Register)	Registro Campal#prt	469