prontera,145,201,5	script	Bino das Tretas	730,{
	set .@debug, 0; // 1 Para mandar mensagens 0 para não
	mes "[Bino das Treta]";

	if (getgmlevel() == 99) {
		menu "Ligar/Desligar", LigaDesliga, "Continuar para Menu", GoToMenu, "Cancelar", Cancelar;
	}
	callsub GoToMenu;

	// Schedule
	OnClock0000:
	OnClock0200:
	OnClock0400:
	OnClock0600:
	OnClock0800:
	OnClock1000:
	OnClock1200:
	OnClock1400:
	OnClock1600:
	OnClock1800:
	OnClock2000:
	OnClock2200:
		callsub S_CallBegin;
		end;
	
	//----->
	
	// ---> Timers .. em milisegundos
	OnTimer60000: 
		announce "[Bino das Treta] A treta começou, para entrar fale comigo! prontera 145 201!!!", bc_all|bc_blue; 
		callsub S_CallStart; end;
	OnTimer180000: 
		announce "[Bino das Treta] Corra para sala que a treta ta pegando fogo!!", bc_all|bc_blue; 
		end;
	OnTimer240000: 
		announce "[Bino das Treta] Última chance de entrar na treta!", bc_all|bc_blue; 
		end;
	OnTimer300000: 
		announce "[Bino das Treta] Ninguém mais pode entrar na treta!", bc_all|bc_blue; 
		set $event_isOpen, 0; 
		end;
	OnTimer360000: 
		callsub S_LeaveTreasures; 
		end;
	OnTimer390000: 
		callsub S_CallFinish; 
		end;
	
	
	LigaDesliga:
		mes "Pronto!";
		close2;
		if (!$event_isOpen)
			callsub S_CallBegin;
		else
			callsub S_CallFinish;
		end;
	
	GoToMenu:
		mes "Olá eu sou o Bino das tretas, sou porteiro dos eventos PVP!!";
		mes "^00FF00Treta dos Caminhoneiros^000000 e";
		mes "^00FF00Comida de Estrada^000000";
		mes "Os eventos são executados aleatoriamente";
		next;
		mes "[Bino das Treta]";
		mes "Os eventos acontecem nos seguintes horários:";
		mes "^0000FF00:00, 02:00, 04:00, 06:00, 08:00^000000";
		mes "^0000FF10:00, 12:00, 14:00, 16:00, 18:00^000000";
		mes "^0000FF20:00, 22:00^000000";
		mes "Como posso te ajudar?";
		if ($event_isOpen) {
			menu "Ir para o evento", GoToEvent, "O que é a treta dos caminhoneiros?", HistoryTreta, "O que é Comida de Estrada?", HistoryComida, "Cancelar", Cancelar;
		}
		else{
			menu "O que é a treta dos caminhoneiros?", HistoryTreta, "O que é Comida de Estrada?", HistoryComida, "Cancelar", Cancelar;
		}
		end;
	
	Cancelar:
		close;
		end;
	
	GoToEvent:
		if (getcharid(1)) {
			next;
			mes "[Bino das Treta]";
			mes "^FF0000Você não pode estar em uma party para participar desse evento.!^000000";
			close;
		}
		else{
			warp "prt_are_in", rand(88, 108), rand(7, 30);
			close2;
		}
		end;
	
	HistoryTreta:
		next;
		mes "[Bino das Treta]";
		mes "Funciona assim:"; 
		mes "Eu anuncio o inicio do evento e um minuto depois libero a entrada para uma sala onde o ^FF0000PVP^000000 estará ligado.";
		mes "Você pode morrer e voltar até faltar 1 minuto para o fim do evento.";
		mes "^FF0000Aviso: você não poderá estar em um grupo, caso contrário será expulso da sala!^000000";
		next;
		mes "[Bino das Treta]";
		mes "Nessa sala existem apenas duas passagens para os baús do tesouro que dão prêmios àqueles que o quebram.";
		mes "Contudo, existem barricadas protegendo os tesouros e você terá que destruí-las para liberar a passagem para a sala do tesouro onde se encontra o baú.";
		mes "Os portais para o tesouro serão liberados 5 minutos após o inicio do evento";
		next;
		mes "[Bino das Treta]";
		mes "Os premios de cada baú variam entre EDP, OCA, Yggdrasil Berry, Yggdrasil Seed, Frasco de Ácido e Frasco de Fogo Grego.";
		mes "O evento termina 30 segundos após os baús serem liberados!";
		callsub GoToMenu;
	
	HistoryComida:
		next;
		mes "[Bino das Treta]";
		mes "Funciona assim:"; 
		mes "Eu anuncio o inicio do evento e um minuto depois libero a entrada para uma sala onde o ^FF0000PVP^000000 estará ligado.";
		mes "Você pode morrer e voltar até faltar 1 minuto para o fim do evento.";
		mes "^FF0000Aviso: você não poderá estar em um grupo, caso contrário será expulso da sala!^000000";
		next;
		mes "[Bino das Treta]";
		mes "Nessa sala existem apenas duas passagens para os baús do tesouro que dão prêmios àqueles que o quebram.";
		mes "Para deixar mais divertido nascem pequenos petiscos(fabres) que quem os matar ganham status ou morrem automaticamente!";
		mes "Os portais para o tesouro serão liberados 5 minutos após o inicio do evento";
		next;
		mes "[Bino das Treta]";
		mes "Os premios de cada baú variam entre EDP, OCA, Yggdrasil Berry, Yggdrasil Seed, Frasco de Ácido e Frasco de Fogo Grego.";
		mes "O evento termina 30 segundos após os baús serem liberados!";
		callsub GoToMenu;
		
	// Begin label
	S_CallBegin:
		if(.@debug){
			announce "[Bino das Treta] Begin", bc_blue|bc_all;
		}
		announce "[Bino das Treta] A treta começa em 1 minuto, se preparem para a porrada, são 5 minutos sem perder a amizade!!", bc_all|bc_blue;
		
		setmapflag "prt_are_in", 38;
		
		// Spawn treasures
		set $MyTrea, 6;
		monster "prt_are_in", 180, 140, "Baú do Tesouro", 1324, 1, strnpcinfo(1)+"::OnBreakTrea";
		monster "prt_are_in", 178, 140, "Baú do Tesouro", 1324, 1, strnpcinfo(1)+"::OnBreakTrea";
		monster "prt_are_in", 175, 140, "Baú do Tesouro", 1324, 1, strnpcinfo(1)+"::OnBreakTrea";
		monster "prt_are_in", 24, 88, "Baú do Tesouro", 1324, 1, strnpcinfo(1)+"::OnBreakTrea";
		monster "prt_are_in", 22, 88, "Baú do Tesouro", 1324, 1, strnpcinfo(1)+"::OnBreakTrea";
		monster "prt_are_in", 20, 88, "Baú do Tesouro", 1324, 1, strnpcinfo(1)+"::OnBreakTrea";

		setnpctimer 0; 
		startnpctimer; 
		
		if(rand(0, 1)){
			// Spawn first barricade line
			set $MyFirstBarricade, 4;
			setcell "prt_are_in",113,17,125,10,cell_walkable,0;
			for (set .@i, 0; .@i < 4; set .@i, .@i + 1)
				monster "prt_are_in",112,(15 - .@i),"Guardião do Tesouro",1906,1,strnpcinfo(1)+"::OnFirstBarricade";
			
			// Spawn second barricade line
			set $MySecondBarricade, 4;
			setcell "prt_are_in",83,10,72,17,cell_walkable,0;
			for (set .@i, 0; .@i < 4; set .@i, .@i + 1)
				monster "prt_are_in",84,(15 - .@i),"Guardião do Tesouro",1906,1,strnpcinfo(1)+"::OnSecondBarricade";
		}
		else{
			donpcevent "Petiscos#01::OnComida";
		}

		end;

	// Start the event
	S_CallStart:
		if(.@debug){
			announce "[Bino das Treta] Start", bc_blue|bc_all;
		}
		set $event_isOpen, 1;
		pvpon "prt_are_in";
		end;
	//----->
	
	//Libera Portais para tesouros
	S_LeaveTreasures:
		announce "[Bino das Treta] Portais para tesouros liberados", bc_blue|bc_all;
		enablenpc "RightWarp";
		enablenpc "LeftWarp";
		end;

	// Finishes the event
	S_CallFinish:
		announce "[Bino das Treta] O evento terminou. Parabéns a todos os participantes!", bc_all|bc_blue;
		killmonsterall "prt_are_in";
		set $event_isOpen, 0;
		disablenpc "RightWarp";
		disablenpc "LeftWarp";
		mapwarp "prt_are_in", "prontera", 122, 161;
		pvpoff "prt_are_in";
		end;
	//----->
	
	OnFirstBarricade:
		set $MyFirstBarricade, $MyFirstBarricade - 1;
		if ($MyFirstBarricade < 1) {
			setcell "prt_are_in",113,17,125,10,cell_walkable,1;
		}
		end;
		
	OnSecondBarricade:
		set $MySecondBarricade, $MySecondBarricade - 1;
		if ($MySecondBarricade < 1) {
			setcell "prt_are_in",83,10,72,17,cell_walkable,1;
		}
		end;
		
	OnBreakTrea:
		atcommand "@cleanmap"; //debug: clean the floor so nobody can pickup items lol
		set $MyTrea, $MyTrea - 1;
		if ($MyTrea < 1) {
			callsub S_CallFinish;
		}
		else {
			//Berry, Seed, OCA, EDP, Dex+10, Bottle Granade, Acid
			setarray .@RandItems[0], 607, 608, 616, 678, 12095, 7135, 7136;
			setarray .@RandQuant[0], 20, 50, 3, 15, 3, 20, 20;
			
			set .@rand, rand(0, (getarraysize(.@RandItems)-1));
			
			set .@prizei, .@RandItems[.@rand];
			set .@prizeq, .@RandQuant[.@rand];

			getitem .@prizei, .@prizeq; 
			announce "[Bino das Treta] O jogador "+strcharinfo(0)+" do Clã "+strcharinfo(2)+" abriu um Baú do Tesouro. Prêmio: "+.@prizeq+"x "+getitemname(.@prizei), bc_blue|bc_all;
			

		}
		end;
	
	OnPCDieEvent:
		sleep2 1000;
		getmapxy @map$,@x,@y,0;
		if ( @map$ == "prt_are_in" ) {
			atcommand "@alive";
			set .@spoint$, getsavepoint(0);
			set .@x, getsavepoint(1);
			set .@y, getsavepoint(2);
			warp .@spoint$, .@x, .@y;
			end;
		}
		else{ 
			end; 
		}
		end;
}


prt_are_in,54,13,0	script	LeftWarp	45,2,2,{
	end;
	OnTouch:
		if (getcharid(1)) {
			announce "[Bino das Tretas] Você não pode estar em uma party para participar desse evento.!", bc_self;
			warp getsavepoint(0), getsavepoint(1), getsavepoint(2);
			end;
		}
		else {
			warp "prt_are_in", 178, 129;
			end;
		}
	
	OnInit:
		disablenpc "LeftWarp";
		end;
}

prt_are_in,143,13,0	script	RightWarp	45,2,2,{
	end;
	OnTouch:
		if (getcharid(1)) {
			announce "[Bino das Tretas] Você não pode estar em uma party para participar desse evento.!", bc_self;
			warp getsavepoint(0), getsavepoint(1), getsavepoint(2);
			end;
		}
		else {
			warp "prt_are_in", 22, 77;
			end;
		}
	
	OnInit:
		disablenpc "RightWarp";
		end;
}

prt_are_in,140,14,0	script	Petiscos#01	-1,{
	end;
	OnComida:
		initnpctimer;
		startnpctimer;
		end;
		
	OnTimer60000:
	OnTimer75000:
	OnTimer90000:
	OnTimer105000:
	OnTimer120000:
	OnTimer135000:
	OnTimer180000:
	OnTimer195000:
	OnTimer240000:
	OnTimer255000:
	OnTimer270000:
	OnTimer285000:
	OnTimer300000:
	OnTimer315000:
		for (set .@i, 0; .@i < 4; set .@i, .@i + 1)
				monster "prt_are_in",rand(88, 108), rand(7, 30),"Petisco",1184,1,"Petiscos#01::OnMonsterDead";
		end;
	OnTimer345000:
		setcell "prt_are_in",83,10,72,17,cell_walkable,1;
		setcell "prt_are_in",113,17,125,10,cell_walkable,1;
		end;
	
	OnMonsterDead:
		switch(rand(0,8)){
			case 0:
				sc_start 32,300000,10;
				break;
			case 1:
				sc_start 30,300000,10;
				break;
			case 2:
				sc_start 29, 300000, 10; skilleffect 29,0; // Angelus
				break;
			case 3:
				sc_start 39, 300000, 10; skilleffect 73,0; // Kyrie Eleison
				break;
			case 4:
				sc_start 41, 300000, 5; skilleffect 75,0; // Gloria
				break;
			case 5:
				sc_start 40, 300000, 5; skilleffect 75,0; // Magnificat
				break;
			case 6:
				skilleffect 103,0; //Manejo Perfeito
				break;
			case 7:
				sc_start 21, 300000, 10; skilleffect 33,0; // Endure
				break;
			case 18:
				sc_start 35, 300000, 5; skilleffect 66,0; // Impositio Manus
		}
		end;
	
}

			
// Flags
//prt_are_in	mapflag	loadevent
prt_are_in	mapflag	nowarpto
prt_are_in	mapflag	nowarp
//prt_are_in	mapflag	noicewall
prt_are_in	mapflag	noteleport
prt_are_in	mapflag	noreturn
prt_are_in	mapflag	nomemo	SavePoint
//prt_are_in	mapflag	gvg_noparty	on
prt_are_in	mapflag	nodrop
prt_are_in	mapflag	noloot
prt_are_in	mapflag	partylock
prt_are_in	mapflag	pvp_noguild
prt_are_in	mapflag	pvp_noparty